<?php

namespace App\News;

use App\Controllers\Auth;
use App\User\User;

class News extends Auth
{


    public function showNews() {
        $data = [];
        $table = Auth::$tableName['news'];
        $getNews = \R::getAll("SELECT * FROM `$table`");

        foreach ($getNews as $news) {
            $data[] = $news;
        }
        return $data;
    }
    public function removeNewsById($data) {
        $table = Auth::$tableName['news'];

        $news_id = $data['id']; // Идентификатор записи, которую вы хотите удалить
        $record = \R::load($table, $news_id); // Загрузка записи по идентификатору
        if ($record->id) {
            \R::trash($record); // Удаление записи
            parent::response('success','Запись успешно удалена.');
        } else {
            parent::response('success','Запись не найдена.');
        }
    }
    public function getNews() {
        $data = [];
        $table = Auth::$tableName['news'];
        $news = \R::findAll($table);
        foreach ($news as $myNews) {
            $data[] = $myNews;
        }
        return $data;
    }

    public function getNewsById($id) {
        $table = Auth::$tableName['news'];
        $news = \R::findOne($table, 'id = ?', [$id]);
        return $news;
    }

    public function getNewsUrl($type)
    {
        $url = $_SERVER['REQUEST_URI'];
        $lastSegment = '';

        if ($type == 'id') {
            $lastSegment = basename($url);
        }

        if ($type == 'name') {
            $path = parse_url($url, PHP_URL_PATH);
            $lastSegment = basename($path);
            $lastSegment = urldecode($lastSegment);
        }

        return $lastSegment;
    }

    public function checkTableData($tableName)
    {
        return parent::checkTableData($tableName); // TODO: Change the autogenerated stub
    }
}